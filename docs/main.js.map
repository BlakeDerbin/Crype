{"version":3,"sources":["./src/app/components-services/crypto/crypto-controller.service.ts","./src/app/components-shared/crypto/crypto-shortlist/crypto-shortlist.component.ts","./src/app/components-shared/crypto/crypto-shortlist/crypto-shortlist.component.html","./src/app/components-shared/crypto/crypto-details/crypto-details.component.ts","./src/app/components-shared/crypto/crypto-details/crypto-details.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components-shared/modules/material-module.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components-shared/crypto/crypto.component.ts","./src/app/components-shared/crypto/crypto.component.html","./src/app/app.module.ts","./src/app/components-shared/crypto/crypto-performers/crypto-performers.component.ts","./src/app/components-shared/crypto/crypto-performers/crypto-performers.component.html","./src/app/components-shared/crypto/crypto.module.ts","./src/app/components-services/crypto/ImarketData.model.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components-shared/crypto/crypto-routing.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { EventEmitter, Injectable, Output } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport IcryptoMarket from \"./ImarketData.model\";\r\nimport IcryptoDetails from \"./IcryptoDetails.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CryptoControllerService {\r\n  defaultCurrency = 'usd';\r\n  formData: IcryptoMarket = new IcryptoMarket();\r\n  readonly baseURL = 'https://api.coingecko.com/api/v3';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTop3Data(): Observable<Array<IcryptoMarket>> {\r\n    return this.http.get<Array<IcryptoMarket>>(this.baseURL + '/coins/markets?vs_currency=' + this.defaultCurrency + '&order=market_cap_desc&per_page=3&page=1&sparkline=false');\r\n  }\r\n\r\n  getMarketData(): Observable<Array<IcryptoMarket>> {\r\n    return this.http.get<Array<IcryptoMarket>>(this.baseURL + '/coins/markets?vs_currency=' + this.defaultCurrency + '&order=market_cap_desc&per_page=20&page=1&sparkline=false');\r\n  }\r\n\r\n  getCryptoDetails(id: string) {\r\n    return this.http.get<Array<IcryptoDetails>>(this.baseURL + '/coins/' + id + '?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=true');\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport IcryptoMarket from \"../../../components-services/crypto/ImarketData.model\";\r\nimport {Subject, Subscription} from \"rxjs\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { CryptoControllerService } from \"../../../components-services/crypto/crypto-controller.service\";\r\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\r\nimport {takeUntil} from \"rxjs/operators\";\r\n\r\nexport const cryptoColumnsDesktop: string[] = [\r\n  'market_cap_rank', 'name', 'symbol', 'price_change_percentage_24h',\r\n  'price_change_24h', 'current_price', 'market_cap_change_percentage_24h',\r\n  'market_cap', 'circulating_supply', 'total_supply', 'max_supply', 'id'\r\n]\r\n\r\nexport const cryptoColumnsMobile: string[] = [\r\n  'market_cap_rank', 'symbol', 'price_change_percentage_24h', 'current_price'\r\n]\r\n\r\n@Component({\r\n  selector: 'app-crypto-shortlist',\r\n  templateUrl: './crypto-shortlist.component.html',\r\n  styleUrls: ['./crypto-shortlist.component.scss']\r\n})\r\nexport class CryptoShortlistComponent implements OnInit {\r\n\r\n  triangleChange = \"./../../../shared/style/images/tri_change.svg\"\r\n  displayedColumns: string[];\r\n  selectedCurrency = 'usd';\r\n  selectedCrypto!: IcryptoMarket;\r\n  dataSource = new MatTableDataSource<IcryptoMarket>();\r\n  subscription: Subscription;\r\n  dataValues = new Array<IcryptoMarket>();\r\n\r\n  //**\r\n  destroyed = new Subject<void>();\r\n  currentScreenSize: string = 'Large';\r\n  mobileView: boolean;\r\n  desktopView: boolean;\r\n\r\n  //**\r\n  // create a map to display breakpoint names for demo\r\n  displayNameMap = new Map([\r\n    [Breakpoints.XSmall, 'xSmall'],\r\n    [Breakpoints.Small, 'Small'],\r\n    [Breakpoints.Medium, 'Medium'],\r\n    [Breakpoints.Large, 'Large'],\r\n    [Breakpoints.XLarge, 'xLarge']\r\n  ])\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  constructor(public service: CryptoControllerService, public breakpointObserver: BreakpointObserver) {\r\n    this.desktopView = true;\r\n\r\n    breakpointObserver.observe([\r\n      Breakpoints.XSmall,\r\n      Breakpoints.Small,\r\n      Breakpoints.Medium,\r\n      Breakpoints.Large,\r\n      Breakpoints.XLarge\r\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\r\n      for (const query of Object.keys(result.breakpoints)) {\r\n        if (result.breakpoints[query]) {\r\n          const q = this.displayNameMap.get(query)\r\n          if(q == \"xSmall\" || q == \"Small\") {\r\n            this.desktopView = false;\r\n            this.displayedColumns = cryptoColumnsMobile;\r\n            this.mobileView = true;\r\n          } else {\r\n            this.displayedColumns = cryptoColumnsDesktop;\r\n            this.desktopView = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  //**\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  //using observable get data from api\r\n  getData() {\r\n    this.subscription = this.service.getMarketData().subscribe(data => {\r\n      console.log(\"Fetching data...\")\r\n      this.dataSource.data = data;\r\n      this.dataValues = data;\r\n      //this.logData();\r\n    },\r\n      error => {\r\n        console.log(\"Data can't be fetched, no connection!\")\r\n      }\r\n      );\r\n  }\r\n\r\n  logData() {\r\n    this.dataValues.forEach(val => {\r\n      console.log('===', val);\r\n    })\r\n  }\r\n\r\n  onSelectDetails(crypto: IcryptoMarket): void {\r\n    this.selectedCrypto = crypto;\r\n  }\r\n}\r\n","<mat-card>\r\n<!--  <span>-->\r\n<!--    <mat-form-field appearance=\"outline\" class=\"currencySelect\">-->\r\n<!--      <mat-label>Select a currency</mat-label>-->\r\n<!--      <mat-select [(value)]=\"selectedCurrency\">-->\r\n<!--        <mat-option value=\"usd\">USD</mat-option>-->\r\n<!--        <mat-option value=\"aud\">AUD</mat-option>-->\r\n<!--        <mat-option value=\"cad\">CAD</mat-option>-->\r\n<!--      </mat-select>-->\r\n<!--    </mat-form-field>-->\r\n<!--  </span>-->\r\n  <table\r\n    mat-table [dataSource]=\"dataSource\"\r\n    matSort class=\"cryptoTable\"\r\n  >\r\n\r\n    <ng-container *ngIf=\"desktopView\" matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\"\r\n        routerLink=\"/details/{{element.id}}\"\r\n      >\r\n        <img class=\"cryptoIcon\" src={{element.image}} alt=\"sd\"> {{element.name}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header [hidden]=\"dataSource\"> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\" [hidden]=\"dataSource\">\r\n        {{element.id}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"current_price\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Current Price </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{(element.current_price) | currency}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"market_cap\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Cap </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        ${{(element.market_cap) | number}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"desktopView\" matColumnDef=\"market_cap_change_percentage_24h\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Cap 24hr Change </th>\r\n      <td mat-cell *matCellDef=\"let element\"\r\n          [ngClass]=\"{\r\n          'cell-negative': element.market_cap_change_percentage_24h < 0,\r\n          'cell-positive': element.market_cap_change_percentage_24h > 0\r\n        }\"\r\n      >\r\n        <div *ngIf=\"element.market_cap_change_percentage_24h > 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\r\n          <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\r\n        </div>\r\n\r\n        <div *ngIf=\"element.market_cap_change_percentage_24h < 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\r\n          <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"market_cap_rank\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Rank </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{element.market_cap_rank}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price_change_percentage_24h\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> 24hr Change % </th>\r\n      <td mat-cell *matCellDef=\"let element\"\r\n          [ngClass]=\"{\r\n          'cell-negative': element.price_change_percentage_24h < 0,\r\n          'cell-positive': element.price_change_percentage_24h > 0\r\n        }\"\r\n      >\r\n        <div *ngIf=\"element.price_change_percentage_24h > 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\r\n          <div fxFlex=\"85%\">{{(element.price_change_percentage_24h) | number:'1.0-2'}}%</div>\r\n        </div>\r\n\r\n        <div *ngIf=\"element.price_change_percentage_24h < 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\r\n          <div fxFlex=\"85%\">{{(element.price_change_percentage_24h) | number:'1.0-2'}}%</div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price_change_24h\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> 24hr Change </th>\r\n      <td mat-cell *matCellDef=\"let element\"\r\n          [ngClass]=\"{\r\n          'cell-negative': element.price_change_percentage_24h < 0,\r\n          'cell-positive': element.price_change_percentage_24h > 0\r\n        }\"\r\n      >\r\n        <div *ngIf=\"element.price_change_percentage_24h > 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\r\n          <div fxFlex=\"85%\">{{(element.price_change_24h) | currency}}</div>\r\n        </div>\r\n\r\n        <div *ngIf=\"element.price_change_percentage_24h < 0\" fxLayout=\"row\" >\r\n          <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\r\n          <div fxFlex=\"85%\">{{(element.price_change_24h) | currency}}</div>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let element\"\r\n        routerLink=\"/details/{{element.id}}\"\r\n      >\r\n        <img *ngIf=\"!desktopView\" class=\"cryptoIcon\" src={{element.image}} alt=\"sd\">\r\n        {{element.symbol | uppercase}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"desktopView\" matColumnDef=\"circulating_supply\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Circulating Supply </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{element.circulating_supply | number:'1.0-0'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"desktopView\" matColumnDef=\"total_supply\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Supply </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{element.total_supply | number:'1.0-0'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"desktopView\" matColumnDef=\"max_supply\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Max Supply </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{element.max_supply | number:'1.0-0'}}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n    ></tr>\r\n  </table>\r\n  <br>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { CryptoControllerService } from 'src/app/components-services/crypto/crypto-controller.service';\r\nimport * as moment from \"moment\";\r\nimport IcryptoDetails from \"src/app/components-services/crypto/IcryptoDetails.model\";\r\nimport {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexTitleSubtitle,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexMarkers,\r\n  ApexYAxis,\r\n  ApexXAxis,\r\n  ApexTooltip, ChartComponent, ApexTheme\r\n} from \"ng-apexcharts\";\r\nimport {DataRowOutlet} from \"@angular/cdk/table\";\r\nimport {log} from \"util\";\r\n\r\nexport type ChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  dataLabels: ApexDataLabels;\r\n  markers: ApexMarkers;\r\n  fill: ApexFill;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  yaxis: ApexYAxis;\r\n  title: ApexTitleSubtitle;\r\n  tooltip: ApexTooltip;\r\n  theme: ApexTheme;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-crypto-details',\r\n  templateUrl: './crypto-details.component.html',\r\n  styleUrls: ['./crypto-details.component.scss']\r\n})\r\nexport class CryptoDetailsComponent implements OnInit {\r\n\r\n  @ViewChild(\"chart\") chart: ChartComponent;\r\n  public chartOptions: Partial<ChartOptions>;\r\n\r\n  details = new Array<IcryptoDetails>();\r\n  id: string\r\n  name: string;\r\n  description: any;\r\n  thumbnail: any;\r\n  ath: number;\r\n  market_rank: number;\r\n  home_page: any;\r\n  subbreddit: any;\r\n  current_price: number;\r\n  price_change_24hr: number;\r\n  sparkline_values: any;\r\n  sparkline_dates = [];\r\n  sparkline_data = [];\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private cryptoService: CryptoControllerService,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCryptoDetails();\r\n  }\r\n\r\n  private getCryptoDetails(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    console.log(\"route id: \", id)\r\n    this.cryptoService.getCryptoDetails(id).subscribe((data) => {\r\n      console.log(\"Getting crypto details data...\")\r\n      this.details = data;\r\n      console.log(this.details);\r\n      this.assignApiData(this.details);\r\n    },\r\n      error => {\r\n        console.log(\"Data can't be fetched, API offline\")\r\n      }\r\n      );\r\n  }\r\n\r\n  private assignApiData(val: any) {\r\n    this.sparkline_values = val.market_data.sparkline_7d.price;\r\n    this.id = val.id;\r\n    this.name = val.name;\r\n    this.description = val.description.en;\r\n    this.thumbnail = val.image.thumb;\r\n    this.ath = val.market_data.ath.usd;\r\n    this.market_rank = val.market_cap_rank;\r\n    this.home_page = val.links.homepage[0];\r\n    this.subbreddit = val.links.subreddit_url;\r\n    this.current_price = val.market_data.current_price.usd;\r\n    this.price_change_24hr = val.market_data.price_change_percentage_24h;\r\n\r\n    if(this.description === \"\") {\r\n      this.description = this.name + \" has no overview information available.\"\r\n    }\r\n\r\n    // Description set on HTML from here, needed as description must be inserted as html because of links embedded\r\n    let desc = document.getElementById(\"description\")\r\n    desc.insertAdjacentHTML('afterbegin', this.description);\r\n\r\n    this.getDateTime();\r\n  }\r\n\r\n  insertParagraphOnDescription(val: any) {\r\n    let i = 0;\r\n    // count the number of times a period occurs\r\n    let periodMatchCount = val.match(/\\./g);\r\n    console.log(periodMatchCount)\r\n\r\n    for(i; i < periodMatchCount.length; i++) {\r\n      let percentMatch = Math.round((i / val.length * 100)* 100) / 100\r\n\r\n      if(percentMatch < 0.50 && percentMatch > 0.45)\r\n      {\r\n        var test = this.description.match(/\\./g).split('.');\r\n        console.log(test)\r\n        console.log(\"insert br here\")\r\n        console.log(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  private getDateTime() {\r\n    // gets the time by hour for 7 days\r\n    let day = moment()\r\n    for(let i = 0; i < 168; i++) {\r\n      this.sparkline_dates.push(day.add(1,'hours').format())\r\n    }\r\n    // combines the sparkline arrays into a 2d array for the chart to use\r\n    for (var i = 0; i < this.sparkline_dates.length; i++) {\r\n      this.sparkline_data.push( [ this.sparkline_dates[i], this.sparkline_values[i] ] );\r\n    }\r\n    this.initChartData();\r\n  }\r\n\r\n  public initChartData(): void {\r\n    this.chartOptions = {\r\n      series: [\r\n        {\r\n          name: this.name,\r\n          data: this.sparkline_data\r\n        }\r\n      ],\r\n      chart: {\r\n        type: \"area\",\r\n        stacked: false,\r\n        height: 350,\r\n        zoom: {\r\n          type: \"x\",\r\n          enabled: false,\r\n          autoScaleYaxis: true\r\n        },\r\n        toolbar: {\r\n          show: false,\r\n          //autoSelected: \"zoom\"\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      markers: {\r\n        size: 0\r\n      },\r\n      title: {\r\n        //text: \"7 day price (hourly)\",\r\n        align: \"left\",\r\n      },\r\n      theme: {\r\n        mode: \"dark\"\r\n      },\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n          shadeIntensity: 1,\r\n          inverseColors: true,\r\n          opacityFrom: 0.5,\r\n          opacityTo: 0,\r\n          stops: [0, 90, 100]\r\n        }\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          formatter: function (val) {\r\n            return \"$\" + val.toLocaleString();\r\n          },\r\n        },\r\n        title: {\r\n          //text: \"Price\",\r\n        }\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\",\r\n        title: {\r\n          //text: \"Data from: \" + moment(this.sparkline_dates[0]).format(\"DD/MM/YY, hh:mma\") +\r\n          //  \" to \" + moment(this.sparkline_dates[167]).format(\"DD/MM/YY, hh:mma\")\r\n        },\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          show: false,\r\n        },\r\n        shared: false,\r\n        y: {\r\n          formatter: function (val) {\r\n            return \"$\" + val.toLocaleString()\r\n          }\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"body-content\">\r\n  <br>\r\n\r\n  <div>\r\n    <div fxLayout=\"row\" class=\"row\">\r\n      <div fxFlex=\"50%\" fxLayout=\"column\">\r\n\r\n        <div fxFlex>\r\n          <div class=\"crypto-rowspan\">\r\n            <img src=\"{{this.thumbnail}}\" alt=\"{{this.name}} crypto icon\">\r\n            <h3>{{this.name}}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div fxFlex>\r\n          <h5>Current price: {{this.current_price | currency}}\r\n            <h5>All time high: {{this.ath | currency}}</h5>\r\n            <h5>Market Rank: {{this.market_rank}}</h5>\r\n            <div fxLayout=\"row\">24hr change:\r\n              <div [ngClass]=\"{\r\n                        'cell-negative': this.price_change_24hr < 0,\r\n                        'cell-positive': this.price_change_24hr > 0\r\n                      }\"\r\n              >\r\n                <div *ngIf=\"this.price_change_24hr > 0\" fxLayout=\"row\" >\r\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\r\n                  <div fxFlex=\"85%\">{{this.price_change_24hr | number:'1.0-2'}}%</div>\r\n                </div>\r\n\r\n                <div *ngIf=\"this.price_change_24hr < 0\" fxLayout=\"row\" >\r\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\r\n                  <div fxFlex=\"85%\">{{this.price_change_24hr | number:'1.0-2'}}%</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </h5>\r\n        </div>\r\n      </div>\r\n\r\n      <div fxFlex=\"50%\">\r\n        <div fxLayout=\"column\">\r\n          <h3>Details</h3>\r\n          <a href=\"{{this.home_page}}\">{{this.name}} Website</a>\r\n          <a href=\"{{this.subbreddit}}\">{{this.name}} Subreddit</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"crypto-overview\">\r\n      <h3>{{this.name}} overview</h3>\r\n      <!-- Description is set from TS file  -->\r\n      <p id=\"description\"></p>\r\n    </div>\r\n    <br>\r\n\r\n    <h3 class=\"crypto-title\">7 day price data</h3>\r\n    <div class=\"chartContainer\" *ngIf=\"sparkline_data.length > 0\">\r\n      <apx-chart\r\n        [series]=\"chartOptions.series\"\r\n        [chart]=\"chartOptions.chart\"\r\n        [dataLabels]=\"chartOptions.dataLabels\"\r\n        [markers]=\"chartOptions.markers\"\r\n        [title]=\"chartOptions.title\"\r\n        [fill]=\"chartOptions.fill\"\r\n        [yaxis]=\"chartOptions.yaxis\"\r\n        [xaxis]=\"chartOptions.xaxis\"\r\n        [tooltip]=\"chartOptions.tooltip\"\r\n        [theme]=\"chartOptions.theme\"\r\n        [autoUpdateSeries]=\"false\"\r\n      ></apx-chart>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"body-content\">\r\n  <h2>Welcome to Crype</h2>\r\n  <h3>This is an experimental site where cryptocurrency prices are tracked</h3>\r\n  <br>\r\n\r\n  <h2>Top 3</h2>\r\n  <app-crypto-performers></app-crypto-performers>\r\n  <br>\r\n\r\n  <h2>Top 20</h2>\r\n  <app-crypto-shortlist></app-crypto-shortlist>\r\n  <br>\r\n</div>\r\n","import {NgModule,LOCALE_ID} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  providers: [\r\n    { provide: LOCALE_ID, useValue: 'en-EN' },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-EN' },\r\n  ]\r\n})\r\nexport class MaterialModules {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Crype';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-crypto',\r\n  templateUrl: './crypto.component.html',\r\n  styleUrls: ['./crypto.component.scss']\r\n})\r\nexport class CryptoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"crypto-content\">\r\n  <app-crypto-shortlist></app-crypto-shortlist>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MaterialModules } from \"./components-shared/modules/material-module\";\r\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\r\nimport { CryptoModule } from \"./components-shared/crypto/crypto.module\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    CryptoModule,\r\n    MaterialModules\r\n  ],\r\n  exports: [\r\n    NavbarComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Directive, OnInit} from '@angular/core';\nimport {Observable, Subject, Subscribable, Subscription} from \"rxjs\";\nimport IcryptoMarket, {ImarketData} from \"../../../components-services/crypto/ImarketData.model\";\nimport {CryptoControllerService} from \"../../../components-services/crypto/crypto-controller.service\";\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {\n  cryptoColumnsDesktop,\n  cryptoColumnsMobile\n} from \"~app/components-shared/crypto/crypto-shortlist/crypto-shortlist.component\";\n\ninterface MediaQueryList extends EventTarget {\n  matches: boolean; // => true if document matches the passed media query, false if not\n  media: string; // => the media query used for the matching\n}\n\n\n\n@Component({\n  selector: 'app-crypto-performers',\n  templateUrl: './crypto-performers.component.html',\n  styleUrls: ['./crypto-performers.component.scss']\n})\nexport class CryptoPerformersComponent implements OnInit {\n\n  subscription: Subscription;\n  cryptoData = new Array<IcryptoMarket>();\n  desktopView: boolean;\n\n  //**\n  destroyed = new Subject<void>();\n  currentScreenSize: string = 'Large';\n\n  //**\n  // create a map to display breakpoint names for demo\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'xSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n  ])\n\n  viewMap = new Map([\n    [Breakpoints.Handset, 'mobile'],\n    [Breakpoints.Web, 'desktop']\n  ])\n\n  isSmallScreen = this.breakpointObserver.isMatched('(max-width: 599px');\n\n  //**\n  constructor(public service: CryptoControllerService, public breakpointObserver: BreakpointObserver) {\n    this.desktopView = true;\n\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\n      for (const query of Object.keys(result.breakpoints)) {\n        if (result.breakpoints[query]) {\n          const q = this.displayNameMap.get(query)\n          if(q == \"xSmall\" || q == \"Small\") {\n            this.desktopView = false;\n          } else {\n            this.desktopView = true;\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.getTop3();\n  }\n\n  //**\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  //switch between mobile and desktop views\n  switchViewMode() {\n    const query = '(orientation: portrait)';\n    const mediaQueryList = window.matchMedia(query);\n\n    // define the callback function for our event listener\n    function listener(mqs: MediaQueryList) {\n      // checks the match\n      if(mqs.matches) {\n        console.log(\"portrait mode\")\n      } else {\n        console.log(\"landscape mode\")\n      }\n    }\n\n    // run check once\n    listener(mediaQueryList);\n\n    // run check on every subsequent change\n    // @ts-ignore\n    mediaQueryList.addEventListener('change', listener);\n  }\n\n  //using observable get data from api\n  getTop3() {\n    this.subscription = this.service.getTop3Data().subscribe(data => {\n      this.cryptoData = data;\n    });\n  }\n\n}\n","\n  <div fxLayout=\"column\" class=\"row\" *ngIf=\"!desktopView\">\n    <div fxFlex class=\"col\" *ngFor=\"let element of cryptoData\">\n      <mat-card class=\"inner-card\">\n        <div fxLayout=\"row\">\n          <div class=\"col-inner-1\">\n            <img class=\"cryptoIcon\" src={{element.image}} alt=\"sd\">\n          </div>\n\n          <div\n            class=\"col-inner-2\">\n            <span>{{element.name}}</span>\n            <span>Market cap: {{element.market_cap_rank}}</span>\n            <span>Current price: {{element.current_price | currency}}</span>\n            <div fxLayout=\"row\">24hr change:\n              <div [ngClass]=\"{\n                          'cell-negative': element.market_cap_change_percentage_24h < 0,\n                          'cell-positive': element.market_cap_change_percentage_24h > 0\n                        }\"\n              >\n                <div *ngIf=\"element.market_cap_change_percentage_24h > 0\" fxLayout=\"row\" >\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\n                  <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\n                </div>\n\n                <div *ngIf=\"element.market_cap_change_percentage_24h < 0\" fxLayout=\"row\" >\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\n                  <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"row\" *ngIf=\"desktopView\">\n    <div fxFlex class=\"col\" *ngFor=\"let element of cryptoData\">\n      <mat-card class=\"inner-card\">\n          <div class=\"col-inner-1\">\n            <img src={{element.image}} alt=\"sd\">\n          </div>\n\n        <div fxFlex>\n          <div\n            fxLayout=\"column\"\n            class=\"col-inner-2\">\n            <span>{{element.name}}</span>\n            <span>Market cap: {{element.market_cap_rank}}</span>\n            <span>Current price: {{element.current_price | currency}}</span>\n            <div fxLayout=\"row\">24hr change:\n              <div [ngClass]=\"{\n                          'cell-negative': element.market_cap_change_percentage_24h < 0,\n                          'cell-positive': element.market_cap_change_percentage_24h > 0\n                        }\"\n              >\n                <div *ngIf=\"element.market_cap_change_percentage_24h > 0\" fxLayout=\"row\" >\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_up</mat-icon>\n                  <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\n                </div>\n\n                <div *ngIf=\"element.market_cap_change_percentage_24h < 0\" fxLayout=\"row\" >\n                  <mat-icon class=\"change-icon\" fxFlex=\"15%\">arrow_drop_down</mat-icon>\n                  <div fxFlex=\"85%\">{{element.market_cap_change_percentage_24h | number:'1.0-2'}}%</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </mat-card>\n    </div>\n  </div>\n","import { NgModule } from '@angular/core';\r\nimport { CryptoComponent } from \"./crypto.component\";\r\nimport { CryptoShortlistComponent } from \"./crypto-shortlist/crypto-shortlist.component\";\r\nimport { CryptoDetailsComponent } from \"./crypto-details/crypto-details.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MaterialModules } from \"../modules/material-module\";\r\nimport { CryptoRoutingModule } from \"./crypto-routing.module\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { CryptoPerformersComponent } from './crypto-performers/crypto-performers.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CryptoComponent,\r\n    CryptoShortlistComponent,\r\n    CryptoDetailsComponent,\r\n    CryptoPerformersComponent\r\n  ],\r\n  exports: [\r\n    CryptoPerformersComponent,\r\n    CryptoShortlistComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CryptoRoutingModule,\r\n    MaterialModules,\r\n    NgApexchartsModule\r\n  ]\r\n})\r\nexport class CryptoModule { }\r\n","export default class IcryptoMarket {\r\n  id: string;\r\n  symbol: string;\r\n  name: string;\r\n  image: string;\r\n  current_price: number;\r\n  market_cap: number;\r\n  market_cap_rank: number;\r\n  fully_diluted_valuation: number;\r\n  total_volume: number;\r\n  high_24h: number;\r\n  low_24h: number;\r\n  price_change_24h: number;\r\n  price_change_percentage_24h: number;\r\n  market_cap_change_24h: number;\r\n  market_cap_change_percentage_24h: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  ath: number;\r\n  ath_change_percentage: number;\r\n  ath_date: string;\r\n  atl: number;\r\n  atl_change_percentage: number;\r\n  atl_date: string;\r\n  roi: {\r\n    times: number;\r\n    currency: string;\r\n    percentage: number;\r\n  };\r\n  last_update: string\r\n}\r\n\r\nexport class ImarketData {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  selectedCurrency: string;\r\n  currencyUSD = \"USD\";\r\n  currencyAUD = \"AUD\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedCurrency = this.currencyUSD;\r\n  }\r\n\r\n  changeCurrency(currency: string) {\r\n    console.log(currency)\r\n    this.selectedCurrency = currency\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <div class=\"navbar-title\">\r\n    <button\r\n      mat-button\r\n      aria-label=\"home-button\"\r\n      routerLink=\"\"\r\n    >\r\n      <h2>Crype</h2>\r\n    </button>\r\n  </div>\r\n  <div class=\"navbar-currency\">\r\n    <button mat-button [matMenuTriggerFor]=\"currencyMenu\">Currency ({{selectedCurrency}})</button>\r\n    <mat-menu #currencyMenu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"changeCurrency(currencyUSD)\">USD</button>\r\n      <button mat-menu-item (click)=\"changeCurrency(currencyAUD)\">AUD</button>\r\n    </mat-menu>\r\n  </div>\r\n<!--  <div class=\"navbar-buttons\">-->\r\n<!--    <button-->\r\n<!--      mat-button-->\r\n<!--      aria-label=\"home-button\"-->\r\n<!--      routerLink=\"\"-->\r\n<!--    ><mat-icon>home</mat-icon>-->\r\n<!--    </button>-->\r\n<!--    <button-->\r\n<!--      mat-button-->\r\n<!--      aria-label=\"crypto-list\"-->\r\n<!--      routerLink=\"crype-list\"-->\r\n<!--    ><mat-icon>format_list_bulleted</mat-icon>-->\r\n<!--      <span id=\"button-title\">Top 20</span>-->\r\n<!--    </button>-->\r\n<!--  </div>-->\r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes} from \"@angular/router\";\r\nimport { CryptoComponent } from \"./crypto.component\";\r\nimport { CryptoDetailsComponent } from './crypto-details/crypto-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CryptoComponent },\r\n  { path: 'details/:id', component: CryptoDetailsComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CryptoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from \"./components/home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'crype-list',\r\n    loadChildren: () => import('./components-shared/crypto/crypto.module')\r\n      .then(m => m.CryptoModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}